version: 3
automerge: true
autodiscover:
  mode: auto
delete_source_branch_on_merge: true
parallel_plan: true
parallel_apply: true
abort_on_execution_order_fail: true

projects:
# Core Management Account Projects
- id: /.*/
  name: gxc-consortium-management
  branch: /main/
  dir: .
  workspace: management
  terraform_version: v1.9.4
  delete_source_branch_on_merge: true
  repo_locks:
    mode: on_plan
  autoplan:
    when_modified:
      - '../modules/**/*.tf'
      - '.terraform.lock.hcl'
      - '*.json'
      - '*.yaml'
      - '*.js'
      - '*.tf'
      - '*.tfvars'
      - '*.hcl'
    enabled: true
  plan_requirements: [approved]
  apply_requirements: [approved]
  execution_order_group: 1
  workflow: management-workflow

# Audit Account Projects
- id: /.*/
  name: gxc-consortium-securityaudit
  branch: /security/
  dir: .
  workspace: security
  terraform_version: v1.9.4
  autoplan:
    when_modified:
      - '../modules/**/*.tf'
      - '.terraform.lock.hcl'
      - '*.json'
      - '*.yaml'
      - '*.js'
      - '*.tf'
      - '*.tfvars'
      - '*.hcl'
  execution_order_group: 2
  workflow: security-workflow

# LogArchived Account Projects
- id: /.*/
  name: gxc-consortium-logarchived
  branch: /logs/
  dir: .
  workspace: logs
  terraform_version: v1.9.4
  autoplan:
    when_modified:
      - '../modules/**/*.tf'
      - '.terraform.lock.hcl'
      - '*.json'
      - '*.yaml'
      - '*.js'
      - '*.tf'
      - '*.tfvars'
      - '*.hcl'
  execution_order_group: 3
  workflow: logs-workflow

# Billing Account Projects
- id: /.*/
  name: gxc-consortium-billing
  branch: /billing/
  dir: .
  workspace: billing
  terraform_version: v1.9.4
  autoplan:
    when_modified:
      - '../modules/**/*.tf'
      - '.terraform.lock.hcl'
      - '*.json'
      - '*.yaml'
      - '*.js'
      - '*.tf'
      - '*.tfvars'
      - '*.hcl'
  execution_order_group: 4
  workflow: billing-workflow

# Hub Account Projects
- id: /.*/
  name: gxc-consortium-hub01
  branch: /hub01/
  dir: .
  workspace: hub01
  terraform_version: v1.9.4
  autoplan:
    when_modified:
      - '../modules/**/*.tf'
      - '.terraform.lock.hcl'
      - '*.json'
      - '*.yaml'
      - '*.js'
      - '*.tf'
      - '*.tfvars'
      - '*.hcl'
  execution_order_group: 5
  workflow: hub01-workflow

- id: /.*/
  name: gxc-consortium-hub02
  branch: /hub02/
  dir: .
  workspace: hub02
  terraform_version: v1.9.4
  autoplan:
    when_modified:
      - '../modules/**/*.tf'
      - '.terraform.lock.hcl'
      - '*.json'
      - '*.yaml'
      - '*.js'
      - '*.tf'
      - '*.tfvars'
      - '*.hcl'
  execution_order_group: 6
  workflow: hub02-workflow

- id: /.*/
  name: gxc-consortium-hub03
  branch: /hub03/
  dir: .
  workspace: hub03
  terraform_version: v1.9.4
  autoplan:
    when_modified:
      - '../modules/**/*.tf'
      - '.terraform.lock.hcl'
      - '*.json'
      - '*.yaml'
      - '*.js'
      - '*.tf'
      - '*.tfvars'
      - '*.hcl'
  execution_order_group: 7
  workflow: hub03-workflow

workflows:
  management-workflow:
    plan:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor
      - run: aws sts get-caller-identity
      - init:
          extra_args: ["-backend-config=backend.tfvars"]
      - plan:
          extra_args: ["-var-file=management.tfvars"]
    apply:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor
      - run: aws sts get-caller-identity
      - apply

  security-workflow:
    plan:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Security
      - run: aws sts get-caller-identity
      - init:
          extra_args: ["-backend-config=backend.tfvars"]
      - plan:
          extra_args: ["-var-file=security.tfvars"]
    apply:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Security
      - run: aws sts get-caller-identity
      - apply

  logs-workflow:
    plan:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Logs
      - run: aws sts get-caller-identity
      - init:
          extra_args: ["-backend-config=backend.tfvars"]
      - plan:
          extra_args: ["-var-file=logs.tfvars"]
    apply:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Logs
      - run: aws sts get-caller-identity
      - apply

  billing-workflow:
    plan:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Billing
      - run: aws sts get-caller-identity
      - init:
          extra_args: ["-backend-config=backend.tfvars"]
      - plan:
          extra_args: ["-var-file=billing.tfvars"]
    apply:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Billing
      - run: aws sts get-caller-identity
      - apply

  hub01-workflow:
    plan:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Hub01
      - run: aws sts get-caller-identity
      - init:
          extra_args: ["-backend-config=backend.tfvars"]
      - plan:
          extra_args: ["-var-file=hub01.tfvars"]
    apply:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Hub01
      - run: aws sts get-caller-identity
      - apply

  hub02-workflow:
    plan:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Hub02
      - run: aws sts get-caller-identity
      - init:
          extra_args: ["-backend-config=backend.tfvars"]
      - plan:
          extra_args: ["-var-file=hub02.tfvars"]
    apply:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Hub02
      - run: aws sts get-caller-identity
      - apply

  hub03-workflow:
    plan:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Hub03
      - run: aws sts get-caller-identity
      - init:
          extra_args: ["-backend-config=backend.tfvars"]
      - plan:
          extra_args: ["-var-file=hub03.tfvars"]
    apply:
      steps:
      - env:
          name: AWS_PROFILE
          value: GXC-TF-User-Executor-Hub03
      - run: aws sts get-caller-identity
      - apply